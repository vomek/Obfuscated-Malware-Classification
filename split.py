# -*- coding: utf-8 -*-
"""
Created on Fri Oct  2 01:50:44 2020

@author: Wamiq

    Split Code
    Loading Train Test splitting it into Train Valdate Split
"""
from skimage.io import imread
import os
from sklearn.preprocessing import Normalizer,LabelEncoder
from sklearn.model_selection import train_test_split,KFold
import pickle as pkl


def createPickle(pickleFile, file):
    """
    # create Pickle file for data with this function
    # pickleFile = name of picklefile created
    # file= file or data that need to convert into pickle
    """
    os.chdir(r'D:\PEFilesIamges\DataSet')
    with open(pickleFile, 'wb') as fileObject:
        pkl.dump(file, fileObject)
    fileObject.close()

"""
    # loadv data from Pickle file with this function
    # pickleFileName = name of pickle file that needed to load
    # return dataArray=loaded data from pickle file
"""
def loadPickle(pickleFileName): 
    with open(pickleFileName, 'rb') as fileObject:
        dataArray = pkl.load(fileObject)
    fileObject.close()
    return dataArray

imgX = []
imgY = []

"""
    #Train Test Split  (train 70% test 30%)
"""
os.chdir(r'D:\PEFilesIamges\DataSet')
#X_train, X_test, y_train, y_test = train_test_split(imgX, imgY, test_size = 0.3)
X_train=loadPickle("X3TrainPickle.pkl")
y_train=loadPickle("y3TrainPickle.pkl")
X_test=loadPickle("X3TestPickle.pkl")
y_test=loadPickle("y3TestPickle.pkl")

#for train_index, test_index in split(imgX):
    #print("TRAIN:", train_index, "TEST:", test_index)
    #X_train, X_test = imgX[train_index], imgX[test_index]
    #y_train, y_test = imgY[train_index], imgY[test_index]
#X, X_test, y, y_test = train_test_split(imgX, imgY, test_size = 0.3)


"""
    #Train Validate Split  (train 70% validate 30%)
"""
X_train, X_validate, y_train, y_validate = train_test_split(X_train, y_train, test_size = 0.3)
#kf=KFold(n_splits=10, random_state=None, shuffle=False)
#for train_index, validate_index in split(X_train):
    #print("TRAIN:", train_index, "TEST:", test_index)
    #X_train, X_validate = imgX[train_index], imgX[validate_index]
    #y_train, y_validate = imgY[train_index], imgY[validate_index]

createPickle("XTrainPickle.pkl",X_train)
createPickle("yTrainPickle.pkl",y_train)

createPickle("XValidatePickle.pkl",X_validate)
createPickle("yValidatePickle.pkl",y_validate)

createPickle("XTestPickle.pkl",X_test)
createPickle("yTestPickle.pkl",y_test)